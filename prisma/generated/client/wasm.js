
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.AssociationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  contactEmail: 'contactEmail',
  phone: 'phone',
  website: 'website',
  logoUrl: 'logoUrl',
  updatedAt: 'updatedAt'
};

exports.Prisma.SocialLinkScalarFieldEnum = {
  id: 'id',
  platform: 'platform',
  url: 'url',
  associationId: 'associationId'
};

exports.Prisma.ArticleScalarFieldEnum = {
  id: 'id',
  slug: 'slug',
  title: 'title',
  bodyMd: 'bodyMd',
  bodyHtml: 'bodyHtml',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  associationId: 'associationId'
};

exports.Prisma.OrganiserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  role: 'role',
  createdAt: 'createdAt',
  associationId: 'associationId'
};

exports.Prisma.RefreshTokenScalarFieldEnum = {
  id: 'id',
  tokenHash: 'tokenHash',
  organiserId: 'organiserId',
  expiresAt: 'expiresAt',
  revoked: 'revoked'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.SocialPlatform = exports.$Enums.SocialPlatform = {
  WEBSITE: 'WEBSITE',
  TWITTER: 'TWITTER',
  FACEBOOK: 'FACEBOOK',
  INSTAGRAM: 'INSTAGRAM',
  MASTODON: 'MASTODON',
  OTHER: 'OTHER'
};

exports.GlobalRole = exports.$Enums.GlobalRole = {
  ORGANISER: 'ORGANISER',
  ADMIN: 'ADMIN'
};

exports.Prisma.ModelName = {
  Association: 'Association',
  SocialLink: 'SocialLink',
  Article: 'Article',
  Organiser: 'Organiser',
  RefreshToken: 'RefreshToken'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/zaiquiri/Code/convergence-des-luttes/prisma/generated/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters"
    ],
    "sourceFilePath": "/home/zaiquiri/Code/convergence-des-luttes/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../..",
  "clientVersion": "6.10.1",
  "engineVersion": "9b628578b3b7cae625e8c927178f15a170e74a9c",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": null,
        "value": "file:./dev.db"
      }
    }
  },
  "inlineSchema": "// =======================================================\n//  Prisma schema  •  SQLite\n// =======================================================\ngenerator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"driverAdapters\"]\n  output          = \"./generated/client\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = \"file:./dev.db\"\n}\n\n// -------------------------\n//  ENUMS\n// -------------------------\n\nenum SocialPlatform {\n  WEBSITE\n  TWITTER\n  FACEBOOK\n  INSTAGRAM\n  MASTODON\n  OTHER\n}\n\nenum GlobalRole {\n  ORGANISER\n  ADMIN\n}\n\n// -------------------------\n//  MODELS\n// -------------------------\n\nmodel Association {\n  id           String   @id @default(uuid())\n  name         String   @unique\n  slug         String   @unique\n  description  String\n  contactEmail String\n  phone        String?\n  website      String?\n  logoUrl      String?\n  updatedAt    DateTime @updatedAt\n\n  // relations\n  socialLinks SocialLink[] // 1 ──╮\n  articles    Article[] // 1 ──╯\n  organiser   Organiser? // 1 ⇄ 1 (back-reference)\n}\n\nmodel SocialLink {\n  id            Int            @id @default(autoincrement())\n  platform      SocialPlatform\n  url           String\n  associationId String\n  association   Association    @relation(fields: [associationId], references: [id])\n\n  @@index([associationId])\n}\n\nmodel Article {\n  id            Int         @id @default(autoincrement())\n  slug          String      @unique\n  title         String\n  bodyMd        String\n  bodyHtml      String?\n  createdAt     DateTime    @default(now())\n  updatedAt     DateTime    @updatedAt\n  associationId String\n  association   Association @relation(fields: [associationId], references: [id])\n\n  @@index([associationId])\n}\n\nmodel Organiser {\n  id            String         @id @default(uuid())\n  email         String         @unique\n  passwordHash  String\n  role          GlobalRole     @default(ORGANISER)\n  createdAt     DateTime       @default(now())\n  associationId String         @unique // enforces 1-to-1\n  association   Association    @relation(fields: [associationId], references: [id])\n  tokens        RefreshToken[]\n}\n\nmodel RefreshToken {\n  id          Int       @id @default(autoincrement())\n  tokenHash   String    @unique\n  organiserId String\n  organiser   Organiser @relation(fields: [organiserId], references: [id])\n  expiresAt   DateTime\n  revoked     Boolean   @default(false)\n\n  @@index([organiserId])\n}\n",
  "inlineSchemaHash": "2d6ae7de3f5a7a23c48d4402d6a26d5d82313f1599444d8ce578eca3f8a501dd",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Association\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"socialLinks\",\"kind\":\"object\",\"type\":\"SocialLink\",\"relationName\":\"AssociationToSocialLink\"},{\"name\":\"articles\",\"kind\":\"object\",\"type\":\"Article\",\"relationName\":\"ArticleToAssociation\"},{\"name\":\"organiser\",\"kind\":\"object\",\"type\":\"Organiser\",\"relationName\":\"AssociationToOrganiser\"}],\"dbName\":null},\"SocialLink\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"platform\",\"kind\":\"enum\",\"type\":\"SocialPlatform\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"associationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"association\",\"kind\":\"object\",\"type\":\"Association\",\"relationName\":\"AssociationToSocialLink\"}],\"dbName\":null},\"Article\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bodyMd\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bodyHtml\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"associationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"association\",\"kind\":\"object\",\"type\":\"Association\",\"relationName\":\"ArticleToAssociation\"}],\"dbName\":null},\"Organiser\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"GlobalRole\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"associationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"association\",\"kind\":\"object\",\"type\":\"Association\",\"relationName\":\"AssociationToOrganiser\"},{\"name\":\"tokens\",\"kind\":\"object\",\"type\":\"RefreshToken\",\"relationName\":\"OrganiserToRefreshToken\"}],\"dbName\":null},\"RefreshToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tokenHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organiserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organiser\",\"kind\":\"object\",\"type\":\"Organiser\",\"relationName\":\"OrganiserToRefreshToken\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"revoked\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {}
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

